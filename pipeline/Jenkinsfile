/*
 * This program and the accompanying materials are made available under the terms of the *
 * Eclipse Public License v2.0 which accompanies this distribution, and is available at  *
 * https://www.eclipse.org/legal/epl-v20.html                                            *
 *                                                                                       *
 * SPDX-License-Identifier: EPL-2.0                                                      *
 *                                                                                       *
 * Copyright Contributors to the Zowe Project.                                           *
 */

pipeline {
    agent { label 'zowe-build' }
    stages {
        stage('test') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'npm_repo_credentials', usernameVariable: 'NPM_REPO_USER', passwordVariable: 'NPM_REPO_PASSWORD')]) {
                    sh """
                    cd ..
                    npm-cli-login -u ${NPM_REPO_USER} -p '${NPM_REPO_PASSWORD}' -e DL-WM-JRM@gbst.com -r https://<some_npm_repo>
                    yarn install
                    # tests are yet to be defined and coded in.
                    npm test
                    """
                }
            }
        }

        stage('build') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'npm_repo_credentials', usernameVariable: 'NPM_REPO_USER', passwordVariable: 'NPM_REPO_PASSWORD')]) {
                    sh """
                    cd ..
                    npm run build
                    """
                }
            }
        }

        stage('deploy') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'zowe_creds', usernameVariable: 'ZOWE_USER', passwordVariable: 'ZOWE_PASSWORD')]) {
                    if (env.BRANCH_NAME != 'master') {
                        sh """
                        cd ..
                        ssh-keyscan -t rsa -H my.mainframe.com >> ~/.ssh/known_hosts
                        sshpass -f <(printf '%s\n' ${ZOWE_PASSWORD}) scp -r dist ${ZOWE_USER}@my.mainframe.com:</usr/lpp/extender>/sample-node-api
                        sshpass -f <(printf '%s\n' ${ZOWE_PASSWORD}) ssh ibmuser@my.mainframe.com
                        cd </usr/lpp/extender>/sample-node-api
                        npm install --only=prod
                        """
                    }
                }
            }
        }
    }

    post {
        failure {
            script {
            <notify>
                if (env.BRANCH_NAME == 'master') {
                <notify>
                <rollback_if_deployed>
               }
            }
        }

        success {
            script {
            <notify>
                if (env.BRANCH_NAME == 'master' && currentBuild.previousBuild.result != 'SUCCESS') {
                <notify>
                }
            }
        }

        always {
            archiveArtifacts artifacts: '*-archive/**/*.*'
            publishHTML([allowMissing: false,
                alwaysLinkToLastBuild: true,
                keepAll: true,
                reportDir: 'mochawesome-report',
                reportFiles: 'mochawesome.html',
                reportName: 'Test Results',
                reportTitles: 'Test Report'
                ])
        }
    }
}
